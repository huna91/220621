/*git 프로젝트
git은 뭔가?
1. 형상관리도구중에 하나
 - 형상관리도구 : 버전 관리 시스템
 - 작업을 하면서 작업의 리스트를 관리 할 수 있다.

2.git의 장점
 : 협업하는 단계에서 소스코드를 주고 받을 필요 없이 같은 파일을
 팀원들과 동시에 병렬로 작업이 가능하다.

 - ex)
    A가 작업을 하고 -> B에게 작업을 넘겨주는데 
    A랑 B랑 메인페이지를 같이 작업하있는경우
    A는 상품페이지, B는 장바구니 페이지
    파일로 넘겨주고 어디가 다른지 눈으로 보고 이런식으로 작업하게 되면
    시간도 오래걸리고 디버깅도 힘들다.

 - 서버에 서로 푸쉬를 하면 서버에 있는 파일이 자동으로 갱신된다.
    A랑 B랑 작업하는데 C라는 팀원이 추가되었다.
    git을 사용하면 A와B의 파일을 C에게 줄 필요 없이 
    git에서 클론으로 파일을 내려받아서 바로 작업이 가능하다.

3. 소스제어 탭의 git 그래프
 - U : 저장소에 없는 새로운 파일
 - M : 저장소에 파일은 있고 내용이 변경되었을때
 - D : 저장소에 있는 파일이 제거되었을때

4. git 저장소(터미널의 노란색)가 초기화 된 경로인지 확인 잘하고 사용
  (초기화 경로는 git init을 한 경로)

5. git 명령어
 - cd "변경할 경로(폴더)" : 경로 변경시 사용
 - cd .. : 상위경로로 올라감
 - ls : 경로에 있는 파일 확인

6. git 설정
 - 사용자 설정 
  : 깃을 사용할 때 사용하는 git의 초기 세팅 입력
  * git config --global user.name "자기 닉네임"
  * git config --global user.email "자기 이메일"
 - 설정 정보 조회
  : 닉네임과 이메일이 잘 입력 되었는지 확인
  * git config --global --list
 - git 저장소 초기화 저장소 생성
  : git의 저장소로 지정할 경로로 이동해서
  * git init
 - git 저장소 복제(파일 내려받기)
  * git clone (url)
 - git 저장소 추가
  * git remote add origin (git저장소 url)
 - git 사용
  : 스테이징에 추가
  * git add 파일명(확장자 까지)
 - 커밋 메시지
  * git commit -m (작업내용)
 - 현재 브런치 변경
  * git switch (브런치 이름)
 - 브런치 목록 전부보기
  * git branch -r
 - 로컬 git 브런치 목록 전부보기
  * git branch -a
 - 브런치 추가
  * git branch (추가하고 싶은 브런치 이름)
 - 브런치 제거
  * git branch -d (제거할 브런치 이름)
 - 리드미 작성
  1) 글씨 설정
   * #을 앞에 붙여주면 글씨가 커짐(5개 까지 가능, 한개가 제일 큼)
  2) 백틱(`) 세개로 코드 작성(아래와 같이 사용) 
      ```사용할 언어
      코드내용
      ```
  3) 링크 사용
   : []() 를 사용하여 작성
   * [링크의 이름](url주소)
  4) 목록 추가
   : * 를 사용하여 목록 추가
  5) 테이블 추가
   : |, --- 두 가지로 행 열 구분 하여 작성
    1 | 2 | 3 |
   ---|---|---|
  6) 이미지 추가
   : 이슈 탭에 가서 새로운 이슈 생성 후 이미지를 드래그 한다.
     그걸 복사하여  사용한다.




*/




